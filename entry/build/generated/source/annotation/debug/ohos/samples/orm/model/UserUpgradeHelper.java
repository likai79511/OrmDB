// Copyright (c) Huawei Technologies Co., Ltd. 2019-2019. All rights reserved.
package ohos.samples.orm.model;

import java.util.List;
import ohos.data.orm.EntityHelper;
import ohos.data.orm.OrmPredicates;
import ohos.data.rdb.Statement;
import ohos.data.resultset.ResultSet;

/**
 * Generated by ohos.data.orm.processor for user in ohos.samples.orm.model.BookStoreUpgrade. Do not modify!
 *
 * @author Huawei
 * @since 2021-07-20
 */
public class UserUpgradeHelper implements EntityHelper<UserUpgrade> {
    private static final UserUpgradeHelper INSTANCE = new UserUpgradeHelper();

    private static final String INSERT_STATEMENT = "INSERT INTO `user` (`userId`, `firstName`, `lastName`, `age`, `balance`, `useTimestamp`) VALUES (?,?,?,?,?,?)";

    private static final String UPDATE_STATEMENT = "UPDATE `user` Set `userId` = ?, `firstName` = ?, `lastName` = ?, `age` = ?, `balance` = ?, `useTimestamp` = ? WHERE `rowid` = ?";

    private static final String DELETE_STATEMENT = "DELETE FROM `user` WHERE `rowid` = ?";

    private UserUpgradeHelper() {
    }

    public static UserUpgradeHelper getInstance() {
        return INSTANCE;
    }

    @Override
    public void bindValue(Statement statement, UserUpgrade object) {
        statement.setLong(1, object.getUserId());
        String firstName = object.getFirstName();
        if (firstName != null) {
            statement.setString(2, firstName);
        } else {
            statement.setNull(2);
        }
        String lastName = object.getLastName();
        if (lastName != null) {
            statement.setString(3, lastName);
        } else {
            statement.setNull(3);
        }
        statement.setLong(4, object.getAge());
        statement.setDouble(5, object.getBalance());
        statement.setLong(6, object.getUseTimestamp());
    }

    @Override
    public void bindValue(Statement statement, UserUpgrade object, long id) {
        this.bindValue(statement, object);
        statement.setLong(7, id);
    }

    @Override
    public UserUpgrade createInstance(ResultSet resultSet) {
        UserUpgrade object = new UserUpgrade();
        object.setRowId(resultSet.getLong(0));
        object.setUserId(resultSet.getInt(1));
        object.setFirstName(resultSet.getString(2));
        object.setLastName(resultSet.getString(3));
        object.setAge(resultSet.getInt(4));
        object.setBalance(resultSet.getDouble(5));
        object.setUseTimestamp(resultSet.getLong(6));
        return object;
    }

    @Override
    public void setPrimaryKeyValue(UserUpgrade object, long value) {
        object.setUserId((int)value);
    }

    @Override
    public String getTableName() {
        return "user";
    }

    @Override
    public String getInsertStatement() {
        return INSERT_STATEMENT;
    }

    @Override
    public String getUpdateStatement() {
        return UPDATE_STATEMENT;
    }

    @Override
    public String getDeleteStatement() {
        return DELETE_STATEMENT;
    }

    public OrmPredicates generatePredicatesGetRelated(String foreignKeyName,
            List<UserUpgrade> objects) {
        return null;
    }
}
